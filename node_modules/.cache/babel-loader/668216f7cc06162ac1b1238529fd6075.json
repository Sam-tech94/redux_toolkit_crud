{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { UsersData } from \"../FakeData\";\nconst LOCALE_STORAGE_KEY = \"user/userdata\";\nconst initialState = {\n  value: UsersData\n};\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.value.push(action.payload);\n    },\n    updateUsername: (state, action) => {\n      state.value.map(user => {\n        if (user.id === action.payload.id) {\n          user.username = action.payload.username;\n        }\n      });\n    },\n    deleteUser: (state, action) => {\n      state.value = state.value.filter(user => user.id !== action.payload.id);\n    },\n    storage: state => {\n      localStorage.getItem(LOCALE_STORAGE_KEY, JSON.stringify());\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  updateUsername\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","UsersData","LOCALE_STORAGE_KEY","initialState","value","userSlice","name","reducers","addUser","state","action","push","payload","updateUsername","map","user","id","username","deleteUser","filter","storage","localStorage","getItem","JSON","stringify","actions","reducer"],"sources":["/Users/tumolabsstudent/Desktop/redux_crud/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { UsersData } from \"../FakeData\";\n\n\nconst LOCALE_STORAGE_KEY = \"user/userdata\";\n\nconst initialState = {\n    value: UsersData\n};\n\nconst userSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        addUser: (state, action) => {\n            state.value.push(action.payload);\n        },\n\n        updateUsername: (state, action) => {\n            state.value.map((user) => {\n                if (user.id === action.payload.id) {\n                    user.username = action.payload.username;\n                }\n            });\n        },\n\n        deleteUser: (state, action) => {\n            state.value = state.value.filter((user) => user.id !== action.payload.id);\n        },\n\n        storage: (state) => {\n            localStorage.getItem(LOCALE_STORAGE_KEY, JSON.stringify())\n        }\n    }\n});\n\nexport const { addUser, deleteUser, updateUsername } = userSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,MAAMC,kBAAkB,GAAG,eAA3B;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEH;AADU,CAArB;AAIA,MAAMI,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,OADoB;EAE1BH,YAF0B;EAG1BI,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxBD,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;IACH,CAHK;IAKNC,cAAc,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACL,KAAN,CAAYU,GAAZ,CAAiBC,IAAD,IAAU;QACtB,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAA/B,EAAmC;UAC/BD,IAAI,CAACE,QAAL,GAAgBP,MAAM,CAACE,OAAP,CAAeK,QAA/B;QACH;MACJ,CAJD;IAKH,CAXK;IAaNC,UAAU,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYe,MAAZ,CAAoBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAAxD,CAAd;IACH,CAfK;IAiBNI,OAAO,EAAGX,KAAD,IAAW;MAChBY,YAAY,CAACC,OAAb,CAAqBpB,kBAArB,EAAyCqB,IAAI,CAACC,SAAL,EAAzC;IACH;EAnBK;AAHgB,CAAD,CAA7B;AA0BA,OAAO,MAAM;EAAEhB,OAAF;EAAWU,UAAX;EAAuBL;AAAvB,IAA0CR,SAAS,CAACoB,OAA1D;AACP,eAAepB,SAAS,CAACqB,OAAzB"},"metadata":{},"sourceType":"module"}